install.packages("knitr")
install.packages('knitr', repos='http://cran.rstudio.org')
install.packages('ggplot2',dependencies = TRUE)
ggpairs(red_wine ,lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(ggplot2)
library(knitr)
library(GGally)
red_wine=read.csv('wineQualityReds.csv')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
getwd()
setwd(/home/zed/DataAnalystNanodegree-Udacity/P4)
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegreeUdacity/P4')
setwd
setwd('home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
library(ggplot2)
library(knitr)
library(GGally)
red_wine=read.csv('wineQualityReds.csv')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/')
setwd('/home/zed/DataAnalystNanodegree-Udacity/')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4EDA')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4EDA/')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4EDA/')
getwd
getwd()
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4EDA/')
setwd('/home/zed/DataAnalystNanodegree-Udacity/P4/')
library(ggplot2)
library(knitr)
library(GGally)
```
# Data Description
```{r echo=FALSE, Load_the_Data}
# Load the Data
#directory - /home/zed/DataAnalystNanodegree-Udacity/P4
red_wine=read.csv('wineQualityReds.csv')
summary(red_wine)
str(red_wine)
```
# Univariate Plots Section
Our Dataset has 12 varriables with 1599 obserbvation of different red wines
```{r echo=FALSE , warning=FALSE , message=FALSE}
ggplot(aes(x=fixed.acidity),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Fixed.Acidity ')
ggplot(aes(x=volatile.acidity),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Volatile.Acidity ')
```
Fixed Acidity and Volatile Acidity looks normally distributed
```{r echo=FALSE , warning=FALSE , message=FALSE}
ggplot(aes(x=citric.acid),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Citric.Acid ')
ggplot(aes(x=citric.acid),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Citric.Acid ')+
scale_x_log10()
```
Citric Acidity looks skewed . . adding a log10 transformation wont change much .
```{r echo=FALSE , warning=FALSE ,message=FALSE}
ggplot(aes(x=residual.sugar),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Residual Sugar')
ggplot(aes(x=chlorides),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Chlorides')
ggplot(aes(x=free.sulfur.dioxide),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of free.sulfur.dioxide')
ggplot(aes(x=total.sulfur.dioxide),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of total.sulfur.dioxide')
ggplot(aes(x=total.sulfur.dioxide),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of total.sulfur.dioxide')+
scale_x_log10()
```
Adding log10() transformation on X axis makes the distribution Normal for Total.sulfur.dioxide
```{r echo=FALSE , warning=FALSE , message=FALSE}
ggplot(aes(x=density),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Density')
ggplot(aes(x=pH),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of pH')
```
pH and Density is normally distrbuted
```{r echo=FALSE , warning=FALSE , message=FALSE}
ggplot(aes(x=sulphates),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of sulphates')
scale_x_log10()
ggplot(aes(x=sulphates),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of sulphates')+
scale_x_log10()
ggplot(aes(x=alcohol),data = red_wine)+
geom_histogram()+
ggtitle('Frequency of Alcohol')
```
Frequency of Sulphate looks normally distributed after adding log10() transformation
```{r echo=FALSE , warning=FALSE , message=FALSE}
ggplot(aes(x=quality),data = red_wine)+
geom_bar()+
ggtitle('Frequency of Quality ')
```
# Univariate Analysis
### What is the structure of your dataset?
Number of Records: 1599<br>
Number of Attributes:  11 + output attribute<br>
Attribute information:
Input Variable
1 - fixed acidity (tartaric acid - g / dm^3)
2 - volatile acidity (acetic acid - g / dm^3)
3 - citric acid (g / dm^3)
4 - residual sugar (g / dm^3)
5 - chlorides (sodium chloride - g / dm^3
6 - free sulfur dioxide (mg / dm^3)
7 - total sulfur dioxide (mg / dm^3)
8 - density (g / cm^3)
9 - pH
10 - sulphates (potassium sulphate - g / dm3)
11 - alcohol (% by volume)
Output variable (based on sensory data):
12 - quality (score between 0 and 10)
### What is/are the main feature(s) of interest in your dataset?
Quality is the main feature of interest in this dataset
### What other features in the dataset do you think will help support your investigation into your feature(s) of interest?
The information provided by the authors that there are correlation between certain features. Thus we look into the feature which effects the quality and as there are much more number of Wines of average quality than very low and very high quality wines it will be a task to dected the outliers to find the excelent and poor quality wines.
### Did you create any new variables from existing variables in the dataset?
No , I didn't created any new variables from existing variables in the dataset.
### Of the features you investigated, were there any unusual distributions? Did you perform any operations on the data to tidy, adjust, or change the form of the data? If so, why did you do this?
Citric Acidity looked unusally distributed but adding log-transform it wont change much. Total.sulfur.dioxide and Frequency of Sulphate looked skewed but adding a log10 transformation changed the form of the data to normally distributed .
# Bivariate Plots Section
```{r echo=FALSE, Bivariate_Plots}
ggpairs(red_wine ,lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
```
# Bivariate Analysis
### Talk about some of the relationships you observed in this part of the investigation. How did the feature(s) of interest vary with other features in the dataset?
### Did you observe any interesting relationships between the other features (not the main feature(s) of interest)?
